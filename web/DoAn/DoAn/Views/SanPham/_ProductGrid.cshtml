@model DoAn.Models.ProductViewModel;
<style>
    nav{
        display: block;
        grid-column: span 4;
    }
</style>
<!-- Khu vực hiển thị sản phẩm -->
<div class="product-grid" id="product-list-container">
    @foreach (var sp in Model.Products)
    {
        <div class="product-item" data-id="@sp.IdSanPham" data-price="@sp.DonGia" data-type="@sp.LoaiSanPham.TenLoai">
            <!-- Link to product details -->
            <a href="@Url.Action("Detail", "SanPham", new { id = sp.IdSanPham })">
                <div class="product-image">
                    <img src="~/lib/@sp.Hinh" alt="@sp.TenSanPham" style="width: 200px; height: 200px;">
                </div>
                <div class="product-name">@sp.TenSanPham</div>
                <div class="product-rating">
                    @for (int i = 0; i < (int)sp.Diem; i++)
                    {
                        <i class="fas fa-star"></i>
                    }
                    @if (sp.Diem % 1 != 0)
                    {
                        <i class="fas fa-star-half-alt"></i>
                    }
                </div>
                <div class="product-pricing">
                    @if (Model.Promotions.Any(km => km.IdSanPham == sp.IdSanPham))
                    {
                        var discount = Model.Promotions.First(km => km.IdSanPham == sp.IdSanPham);
                        var discountedPrice = sp.DonGia * (1 - (discount.PhanTramKhuyenMai / 100.0));
                        <span class="product-price">@discountedPrice.ToString("N0")₫</span>
                        <span class="product-original-price">@sp.DonGia.ToString("N0")₫</span>
                        <span class="product-discount">-@discount.PhanTramKhuyenMai% </span>
                    }
                    else
                    {
                        <span class="product-price">@sp.DonGia.ToString("N0")₫</span>
                    }
                </div>
            </a>
        </div>
    }
    <br />
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0)" onclick="loadPage(1)">««</a>
            </li>
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0)" onclick="loadPage(@(Model.CurrentPage - 1))">«</a>
            </li>
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="javascript:void(0)" onclick="loadPage(@i)">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0)" onclick="loadPage(@(Model.CurrentPage + 1))">»</a>
            </li>
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="javascript:void(0)" onclick="loadPage(@Model.TotalPages)">»»</a>
            </li>
        </ul>
    </nav>

</div>

<script>
    $(document).ready(function () {
        $('#filter-btn').click(function () {
            // Lấy dữ liệu từ form
            var selectedTypes = [];
            var minPrice = $('#min-price').val();
            var maxPrice = $('#max-price').val();
            var sortOption = $('#sort').val();

            // Lấy loại sản phẩm đã chọn
            $('#product-type-filters input:checked').each(function () {
                selectedTypes.push($(this).val());
            });

            // Lọc các sản phẩm trong `product-grid`
            $('#product-grid .product-item').each(function () {
                var productType = $(this).data('type');
                var productPrice = parseFloat($(this).data('price')); // Đảm bảo là số

                // Điều kiện lọc
                var matchesType = selectedTypes.length === 0 || selectedTypes.includes(productType);
                var matchesPrice = (!minPrice || productPrice >= parseFloat(minPrice)) &&
                    (!maxPrice || productPrice <= parseFloat(maxPrice));

                if (matchesType && matchesPrice) {
                    $(this).show(); // Hiển thị sản phẩm phù hợp
                } else {
                    $(this).hide(); // Ẩn sản phẩm không phù hợp
                }
            });

            // Sắp xếp sản phẩm
            if (sortOption === 'name-asc') {
                sortProducts(true);
            } else if (sortOption === 'name-decs') {
                sortProducts(false);
            }
        });

        // Hàm sắp xếp sản phẩm
        function sortProducts(ascending) {
            var products = $('#product-grid .product-item').toArray();
            products.sort(function (a, b) {
                var nameA = $(a).find('.product-name').text().toLowerCase();
                var nameB = $(b).find('.product-name').text().toLowerCase();
                return ascending ? nameA.localeCompare(nameB) : nameB.localeCompare(nameA);
            });

            // Thay thế các sản phẩm đã sắp xếp vào `product-grid`
            $('#product-grid').html(products);
        }

    });
</script>
<script>
    $(document).ready(function () {
        // Gắn sự kiện input cho thanh tìm kiếm
        $('.search-bar input').on('input', function () {
            var keyword = $(this).val();
            console.log("Tìm kiếm từ khóa:", keyword);

            // Gửi AJAX tìm kiếm
            $.ajax({
                url: '/SanPham/SearchAjax',  // Đảm bảo đường dẫn chính xác
                type: 'GET',
                data: { keyword: keyword, page: 1 },  // Thêm tham số page = 1 để bắt đầu từ trang đầu tiên
                success: function (response) {
                    console.log("Kết quả tìm kiếm:", response);
                    // Cập nhật lại danh sách sản phẩm và phân trang
                    $('#product-list-container').html($(response).find('#product-list-container').html());
                    $('.pagination').html($(response).find('.pagination').html());
                },
                error: function () {
                    console.error("Lỗi khi tìm kiếm sản phẩm.");
                }
            });
        });
    });
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
